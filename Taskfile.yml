version: '3'

vars:
  CLI_PACKAGE: github.com/Krzysztofz01/pixel-sorter/cli
  LIB_PACKAGE: github.com/Krzysztofz01/pixel-sorter/pkg
  PIXEL_SORTER_TAG:
    sh: git symbolic-ref -q --short HEAD || git describe --tags --exact-match

# TODO: Add testing examples from the launch.json
tasks:
  build:
    desc: Build the PixelSorterCLI for the current system and architecture with debug symbols included.
    cmds:
      - cmd: go build -v -ldflags="-X github.com/Krzysztofz01/pixel-sorter/cmd.Version={{.PIXEL_SORTER_TAG}}" -o bin/pixel-sorter.exe ./cli
        platforms: [ windows ]
      - cmd: go build -v -ldflags="-X github.com/Krzysztofz01/pixel-sorter/cmd.Version={{.PIXEL_SORTER_TAG}}" -o bin/pixel-sorter ./cli
        platforms: [ linux, darwin ]
  
  build:prod:windows:amd64:
    desc: Build the PixelSorterCLI for Windows system and AMD64 architecture with optimizations and without the debug symbols included.
    cmds:
      - GOOS=windows GOARCH=amd64 go build -v -trimpath -ldflags="-s -w -X github.com/Krzysztofz01/pixel-sorter/cmd.Version={{.PIXEL_SORTER_TAG}}" -o bin/pixel-sorter.exe ./cli

  build:prod:linux:amd64:
    desc: Build the PixelSorterCLI for Linux system and AMD64 architecture with optimizations and without the debug symbols included.
    cmds:
      - GOOS=linux GOARCH=amd64 go build -v -trimpath -ldflags="-s -w -X github.com/Krzysztofz01/pixel-sorter/cmd.Version={{.PIXEL_SORTER_TAG}}" -o bin/pixel-sorter ./cli

  build:prod:darwin:amd64:
    desc: Build the PixelSorterCLI for MacOS system and AMD64 architecture with optimizations and without the debug symbols included.
    cmds:
      - GOOS=darwin GOARCH=amd64 go build -v -trimpath -ldflags="-s -w -X github.com/Krzysztofz01/pixel-sorter/cmd.Version={{.PIXEL_SORTER_TAG}}" -o bin/pixel-sorter ./cli

  test:
    desc: Run tests for all packages.
    cmds:
      - go test -v ./...

  test:cover:
    desc: Run tests for all packages and generate a coverage raport.
    vars:
      COVERAGE: coverage.out
    cmds:
      - go test -v -coverprofile {{.COVERAGE}} ./...
      - go tool cover -html {{.COVERAGE}}

  profile:
    desc: Run a profiling test with given pixel sorter arguments (task profile --args) and display the pprof tool results.
    vars:
      CPU_PROFILE: cpu.prof
      MEM_PROFILE: mem.prof
    cmds:
      - PIXEL_SORTER_CLI_ARGS="{{.CLI_ARGS}}" go test -v -cpuprofile {{.CPU_PROFILE}} -memprofile {{.MEM_PROFILE}} -run ^$ -bench . {{.CLI_PACKAGE}}
      - go tool pprof -text {{.CPU_PROFILE}}
      - go tool pprof -text {{.MEM_PROFILE}}

  benchmark:
    desc: Run a benchmark with given pixel sorter arguments (task benchark -- <args>).
    cmds:
      - PIXEL_SORTER_CLI_ARGS="{{.CLI_ARGS}}" go test -v -count 5 -run ^$ -bench . {{.CLI_PACKAGE}} -benchmem 
